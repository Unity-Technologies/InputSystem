{% metadata_file .yamato/draft-config.metadata %}
---

{% for editor in editors %}
{% for standalone_platform in standalone_platforms %}
draft_standalone_playmode_andisolation_{{ standalone_platform.name }}_{{ editor.version }}:
  name : "Standalone Playmode [{{ standalone_platform.name }}, {{ editor.version }}]"
  agent:
    type: {{ standalone_platform.type }}
    image: {{ standalone_platform.image }}
    flavor: {{ standalone_platform.flavor}}
  commands:
    # Install any extra .NET SDK's on images that don't have them, "docfx metadata" requires a .NET SDK to work.
{% if standalone_platform.netinstall %}
    - {{ standalone_platform.netinstall }}
{% endif %}
    # Get latest version of doctools package. Automatically makes the documentation tests in APIVerification go live.
    - git clone git@github.cds.internal.unity3d.com:unity/com.unity.package-manager-doctools.git Packages/com.unity.package-manager-doctools
    # We keep the samples in Assets/ as they otherwise won't get imported and you can't
    # really work with them. Move them into the package for when we run upm-ci here.
    - mv ./Assets/Samples ./Packages/com.unity.inputsystem
    - mv ./Assets/Samples.meta ./Packages/com.unity.inputsystem
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package pack --package-path ./Packages/com.unity.inputsystem/
    # Run upm-ci verification tests as well as tests contained in the package.
    - upm-ci package test --package-path ./Packages/com.unity.inputsystem/ -u {{ editor.version }}
    {% if standalone_platform.installscript %}
    - pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
    - {{ standalone_platform.installscript }} {{ editor.version }}
    {% endif %}
    # ADBv2 on 2019.4 causes the test runner to not start on initial import when the
    # samples are in the package. Move the samples back into the project.
    - mv ./Packages/com.unity.inputsystem/Samples ./Assets
    - mv ./Packages/com.unity.inputsystem/Samples.meta ./Assets
    # Now run our full test suite that sits in Assets/Tests by running UTR on our project.
    - upm-ci~/tools/utr/utr --testproject . --timeout=1200 --editor-location=.Editor --artifacts_path=upm-ci~/test-results/isolation-com.unity.inputsystem.tests --suite=playmode --api-profile=NET_4_6 --stdout-filter=minimal {% if standalone_platform.runtime %} --platform {{ standalone_platform.runtime }} {% endif %} {% if standalone_platform.scripting-backend %} --scripting-backend {{ standalone_platform.scripting-backend }} {% endif %} --report-performance-data --performance-project-id=InputSystem
  artifacts:
    UTR_Standalone_Playmode.zip:
      paths:
        - "upm-ci~/test-results/**/*"
{% endfor %}
{% endfor %}

{% for editor in editors %}
{% for standalone_platform in standalone_platforms %}
draft_standalone_playmode_{{ standalone_platform.name }}_{{ editor.version }}:
  name : "Standalone Playmode [{{ standalone_platform.name }}, {{ editor.version }}]"
  agent:
    type: {{ standalone_platform.type }}
    image: {{ standalone_platform.image }}
    flavor: {{ standalone_platform.flavor}}
  commands:
    # Install any extra .NET SDK's on images that don't have them, "docfx metadata" requires a .NET SDK to work.
#{% if standalone_platform.netinstall %}
#    - {{ standalone_platform.netinstall }}
#{% endif %}
    # Get latest version of doctools package. Automatically makes the documentation tests in APIVerification go live.
#   - git clone git@github.cds.internal.unity3d.com:unity/com.unity.package-manager-doctools.git Packages/com.unity.package-manager-doctools
    # We keep the samples in Assets/ as they otherwise won't get imported and you can't
    # really work with them. Move them into the package for when we run upm-ci here.
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    # Run upm-ci verification tests as well as tests contained in the package.
    {% if standalone_platform.installscript %}
    - pip install unity-downloader-cli --index-url {{ unity_downloader_cli_registry }}
    - {{ standalone_platform.installscript }} {{ editor.version }}
    {% endif %}
    # Now run our full test suite that sits in Assets/Tests by running UTR on our project.
    - upm-ci~/tools/utr/utr --testproject . --timeout=1200 --editor-location=.Editor --artifacts_path=upm-ci~/test-results/isolation-com.unity.inputsystem.tests --suite=playmode --api-profile=NET_4_6 --stdout-filter=minimal {% if standalone_platform.runtime %} --platform {{ standalone_platform.runtime }} {% endif %} {% if standalone_platform.scripting-backend %} --scripting-backend {{ standalone_platform.scripting-backend }} {% endif %} --report-performance-data --performance-project-id=InputSystem
  dependencies:
    - .yamato/draft-upm-isolation.yml#draft_upm_isolation_{{ standalone_platform.platform }}_{{ editor.version }}
  artifacts:
    UTR_Standalone_Playmode.zip:
      paths:
        - "upm-ci~/test-results/**/*"
{% endfor %}
{% endfor %}